plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.5' // Verifique sempre por atualizações
	id 'io.spring.dependency-management' version '1.1.4'
	id 'org.openjfx.javafxplugin' version '0.0.14'
	id 'application'
}

group = 'com.devlu'
version = '0.0.1-SNAPSHOT'

application {
	mainClass = 'com.devlu.futuresistema_cliente.AppLauncher'
	applicationName = 'futuresistema_cliente'
}

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.openjfx:javafx-controls:17.0.2'
	implementation 'org.openjfx:javafx-fxml:17.0.2'
	implementation 'org.openjfx:javafx-graphics:17.0.2'
	runtimeOnly 'org.openjfx:javafx-web:17.0.2'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	runtimeOnly 'com.h2database:h2'
	runtimeOnly 'org.postgresql:postgresql'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

javafx {
	version = "17.0.2"
	modules = [ 'javafx.controls', 'javafx.fxml', 'javafx.graphics', 'javafx.web' ]
}

// Definindo a tarefa JavaExec corretamente
tasks.register('runJavaFX', JavaExec) {
	group = 'application'
	description = 'Runs the JavaFX application'
	mainClass = application.mainClass
	classpath = sourceSets.main.runtimeClasspath
	standardInput = System.in

	// Adicionando argumentos JVM para o runtime do JavaFX
	jvmArgs = [
			'--module-path', classpath.asPath,
			'--add-modules', 'javafx.controls,javafx.fxml,javafx.graphics,javafx.web',
			'--add-opens', 'java.base/java.lang=ALL-UNNAMED'
	]
}

// Modificando a tarefa 'run' padrão para configurar o JavaFX runtime
tasks.named('run') {
	doFirst {
		jvmArgs = [
				'--module-path', classpath.asPath,
				'--add-modules', 'javafx.controls,javafx.fxml,javafx.graphics,javafx.web',
				'--add-opens', 'java.base/java.lang=ALL-UNNAMED'
		]
	}
}

tasks.named('test') {
	useJUnitPlatform()
}

tasks.withType(JavaCompile) {
	options.encoding = 'UTF-8'
}

